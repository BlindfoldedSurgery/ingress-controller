ingress-nginx:
  controller:
    image:
      chroot: true

    allowSnippetAnnotations: true

    config:
      enable-brotli: true
      use-http2: true
      use-forwarded-headers: true

    ingressClassResource:
      default: true

    replicaCount: 2

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
      prometheusRule:
        enabled: true
        rules:
          # # These are just examples rules, please adapt them to your needs
          - alert: NGINXConfigFailed
            expr: count(nginx_ingress_controller_config_last_reload_successful == 0) > 0
            for: 1s
            labels:
              severity: critical
            annotations:
              description: bad ingress config - nginx config test failed
              summary: uninstall the latest ingress changes to allow config reloads to resume
          - alert: NGINXTooMany500s
            expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"5.+"} ) / sum(nginx_ingress_controller_requests) ) > 5
            for: 1m
            labels:
              severity: warning
            annotations:
              description: Too many 5XXs
              summary: More than 5% of all requests returned 5XX, this requires your attention
          - alert: NGINXTooMany400s
            expr: 100 * ( sum( nginx_ingress_controller_requests{status=~"4.+"} ) / sum(nginx_ingress_controller_requests) ) > 10
            for: 1m
            labels:
              severity: warning
            annotations:
              description: Too many 4XXs
              summary: More than 5% of all requests returned 4XX, this requires your attention

    service:
      type: NodePort
      nodePorts:
        http: 30080
        https: 30443

    nodeSelector:

  defaultBackend:
    enabled: true
    nodeSelector:
    replicaCount: 2

  rbac:
    create: true

  serviceAccount:
    create: true

  podSecurityPolicy:
    enabled: false
